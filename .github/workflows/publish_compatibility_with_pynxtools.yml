name: Publish Compatibility with Pynxtools

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  publish_compatibility:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      # TODO check Disable this test from block merge request
      matrix:
        pynxtools_versions: ["latest_release", "v0.9.3"]
        # pynxtools_versions: ["master"]
        python-versions: ["3.11"]
 
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      
      - name: Install uv && Set up Python ${{ matrix.python-versions }}
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-versions }}
          version: "0.6.2"

      - name: Install nomad
        if: "${{ matrix.python_versions != '3.8'}}"
        run: |
          uv pip uninstall nomad-lab -q
          uv pip install nomad-lab[infrastructure]@git+https://gitlab.mpcdf.mpg.de/nomad-lab/nomad-FAIR.git

      - name: Install dependencies
        run: |
          uv pip install --upgrade pip
          uv pip install coverage coveralls

      - name: Install pynxtools version ${{ matrix.pynxtools_versions }}
        run: |
          PYNXTOOLS_VERSION="${{ matrix.pynxtools_versions }}"
          uv pip uninstall pynxtools -q
          # if [ "$PYNXTOOLS_VERSION" == "master" ]; then
          #   uv pip install pynxtools@git+https://github.com/FAIRmat-NFDI/pynxtools@${{ matrix.pynxtools_versions }}
        
          if [ "$PYNXTOOLS_VERSION" == "latest_release" ]; then
            uv pip install pynxtools
          else
           uv pip install pynxtools==${{ matrix.pynxtools_versions }}
          fi

      - name: Install pynxtools-spm
        run: |
          uv pip install .[dev]

      - name: Run Reader tests
        run: |
          pytest tests/test_reader.py
        continue-on-error: true

      - name: Run Nomad Examples tests
        run: |
          pytest tests/test_nomad_examples.py
        continue-on-error: true